# Generated by Django 4.0.4 on 2022-05-30 07:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('person_id', models.CharField(max_length=10, unique=True, verbose_name='itslearning Person-ID')),
                ('username', models.CharField(max_length=25, unique=True, verbose_name='Benutzername')),
                ('first_name', models.CharField(max_length=25, verbose_name='Vorname')),
                ('last_name', models.CharField(max_length=25, verbose_name='Nachname')),
                ('language', models.CharField(default='de-DE', max_length=10, verbose_name='Sprache')),
                ('profile_image_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='Profilbild-URL')),
                ('use_12_hour_time_format', models.BooleanField(default=False, verbose_name='Zwölf-Stunden Zeitformat')),
                ('allow_auto_role', models.BooleanField(default=True, verbose_name='Automatische Rollen via itslearning')),
                ('is_guest', models.BooleanField(default=False, verbose_name='Ist Gast')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Ist Mitarbeiter')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Ist Admin')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Ist System-Admin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ist aktiv')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuildingSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Bauabschnitt',
                'verbose_name_plural': 'Bauabschnitte',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, verbose_name='Name')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preis')),
                ('purchase_data', models.DateField(blank=True, null=True, verbose_name='Anschaffungsdatum')),
                ('serial_number', models.CharField(blank=True, max_length=35, null=True, unique=True, verbose_name='Seriennummer')),
                ('warranty_period_years', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25), (26, 26), (27, 27), (28, 28), (29, 29), (30, 30), (31, 31), (32, 32), (33, 33), (34, 34), (35, 35), (36, 36), (37, 37), (38, 38), (39, 39), (40, 40), (41, 41), (42, 42), (43, 43), (44, 44), (45, 45), (46, 46), (47, 47), (48, 48), (49, 49), (50, 50), (51, 51), (52, 52), (53, 53), (54, 54), (55, 55), (56, 56), (57, 57), (58, 58), (59, 59), (60, 60), (61, 61), (62, 62), (63, 63), (64, 64), (65, 65), (66, 66), (67, 67), (68, 68), (69, 69), (70, 70), (71, 71), (72, 72), (73, 73), (74, 74), (75, 75), (76, 76), (77, 77), (78, 78), (79, 79), (80, 80), (81, 81), (82, 82), (83, 83), (84, 84), (85, 85), (86, 86), (87, 87), (88, 88), (89, 89), (90, 90), (91, 91), (92, 92), (93, 93), (94, 94), (95, 95), (96, 96), (97, 97), (98, 98), (99, 99)], null=True, verbose_name='Garantiezeit in Jahren')),
                ('warranty_period_months', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11)], null=True, verbose_name='Garantiezeit in Monaten')),
                ('status', models.IntegerField(blank=True, choices=[(2, 'Voll funktionsfähig'), (1, 'Eingeschränkt funktionsfähig'), (0, 'Nicht funktionsfähig')], null=True, verbose_name='Aktueller Status')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Gerät',
                'verbose_name_plural': 'Geräte',
            },
        ),
        migrations.CreateModel(
            name='DeviceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Name')),
                ('icon', models.CharField(blank=True, max_length=60, null=True, validators=[django.core.validators.RegexValidator(message='Bitte nutzten Sie das folgende Format: "bi bi-<icon-name>"', regex='^bi bi-[a-z0-9-]+$')], verbose_name='Bootstrap-Icon (icons.getbootstrap.com)')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Gerätekategorie',
                'verbose_name_plural': 'Gerätekategorien',
            },
        ),
        migrations.CreateModel(
            name='DeviceManufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Gerätehersteller',
                'verbose_name_plural': 'Gerätehersteller',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
            ],
            options={
                'verbose_name': 'Etage',
                'verbose_name_plural': 'Etagen',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=35, verbose_name='Titel')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
                ('status', models.IntegerField(choices=[(0, 'Offen'), (1, 'In Bearbeitung'), (2, 'Geschlossen')], verbose_name='Aktueller Status')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Erstellt am')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('device', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.device', verbose_name='Gerät')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=280, verbose_name='Antwort')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Erstellt am')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Erstellt von')),
                ('ticket', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Ticket-Antwort',
                'verbose_name_plural': 'Ticket-Antworten',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=35, unique=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=280, null=True, verbose_name='Beschreibung')),
                ('building_section', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.buildingsection', verbose_name='Bauabschnitt')),
                ('floor', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.floor', verbose_name='Etage')),
            ],
            options={
                'verbose_name': 'Raum',
                'verbose_name_plural': 'Räume',
            },
        ),
        migrations.AddField(
            model_name='device',
            name='device_category',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.devicecategory', verbose_name='Gerätekategorie'),
        ),
        migrations.AddField(
            model_name='device',
            name='device_manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.devicemanufacturer', verbose_name='Gerätehersteller'),
        ),
        migrations.AddField(
            model_name='device',
            name='room',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='inventory_management.room', verbose_name='Raum'),
        ),
    ]
